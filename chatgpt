#pragma once
#include "Obstacle/Collider.hpp"
#include "Random/Random.hpp"
#include "Environment/Environment.hpp"
#include <Utility/Vec2d.hpp>

/*!
 * @brief Représente un nuage dans l'environnement simulé.
 *
 * Un nuage est un type d'obstacle ayant une position et un rayon,
 * et qui évolue dans le temps
 */
class Cloud : public Collider {
public:
    /*!
     * @brief Constructeur du nuage.
     *
     * @param position Position initiale du centre du nuage.
     * @param rayon Rayon du nuage (doit être >= 0).
     */
    Cloud(Vec2d position, double rayon);

    /*!
     * @brief Met à jour l'état du nuage à chaque pas de temps.
     *
     * @param dt Durée du pas de temps écoulé depuis la dernière mise à jour.
     */
    void update(sf::Time dt);

    /*!
     * @brief Destructeur du nuage.
     */
    virtual ~Cloud();

    /*!
     * @brief Dessine le nuage à l'écran.
     *

    void Collider::draw(sf::RenderTarget &targetWindow, sf::Color couleur) const{
        targetWindow.draw(buildCircle(Position, Rayon, couleur));

    }
     * @param targetWindow Fenêtre de rendu dans laquelle le nuage doit être dessiné.
     */
    void draw(sf::RenderTarget &targetWindow) const override;
};

    void Collider::setPosition(Vec2d position){
        Position=position;
    }
